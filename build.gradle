buildscript {
  repositories {
    mavenCentral()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "gradle.plugin.com.google.protobuf:protobuf-gradle-plugin:0.7.6"
  }
}

apply plugin: 'java'
apply plugin: 'com.google.protobuf'

repositories {
   mavenCentral()
   maven {
       url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

compileJava.options.encoding = 'UTF-8'
protobuf {
  protoc {
    artifact = "com.google.protobuf:protoc:3.0.0-beta-2"
  }
  plugins {
    grpc {
      artifact = 'io.grpc:protoc-gen-grpc-java:0.13.2'
    }
  }
  generatedFilesBaseDir = "$projectDir/generated/"
  generateProtoTasks {
    all()*.plugins {
      grpc {}
    }
  }
}
dependencies {
    compile group: 'org.boofcv', name: 'all', version: '0.23'
	compile group: 'org.jcodec', name: 'jcodec-javase', version: '0.1.9'
	compile group: 'net.coobird', name: 'thumbnailator', version: '0.4.6'
	compile group: 'com.google.code.jlibav', name: 'jlibav', version: '0.2.1'
	compile group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'
	compile group: 'com.google.guava', name: 'guava', version: '19.0'
	compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.5'
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.5'
	compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.5'
	compile group: 'commons-codec', name: 'commons-codec', version: '1.8'
	compile group: 'commons-cli', name: 'commons-cli', version: '1.3.1'
    compile group: 'org.jgrapht', name: 'jgrapht-core', version: '1.0.0'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.6.3'
	compile 'com.google.protobuf:protobuf-java:3.0.0-beta-2'
	compile 'io.grpc:grpc-all:0.13.2'
}

sourceSets {
    main {
        java {
            srcDir 'src'
            srcDir 'generated/main/java'
            srcDir 'generated/main/grpc'
        }
		resources {
			srcDir 'config'
		}
		proto {
			srcDir 'adampro-grpc/src/main/protobuf'
		}
    }
}

jar {
	manifest { 
		attributes 'Main-Class': 'org.vitrivr.cineast.Deserializer'
	}  

	from {
		configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
	}
	
	archiveName = 'cineast_07122016.jar'
}

task copyConfigs(type: Copy){
	from "cineast.json"
	into "$buildDir/libs/"
	outputs.upToDateWhen { false }
	}
	
task deploy(dependsOn: [build, jar, copyConfigs])
